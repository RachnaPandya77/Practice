Explanation:

1. inputMatrix(int rows, int cols, int matrix[rows][cols]):

- Function to take input for a matrix of size rows x cols.
- Uses nested loops to prompt the user for each element and store it in the matrix.


2. displayMatrix(int rows, int cols, int matrix[rows][cols]):

- Function to display a matrix of size rows x cols in a formatted manner.
- Uses nested loops to print each element of the matrix with appropriate formatting.


3.multiplyMatrices(int rows1, int cols1, int matrix1[rows1][cols1], int rows2, int cols2, int matrix2[rows2][cols2], int result[rows1][cols2]):

- Function to multiply two matrices matrix1 (of size rows1 x cols1) and matrix2 (of size rows2 x cols2).
- Checks if multiplication is possible (cols1 must equal rows2).
- Uses triple nested loops to compute each element of the resulting matrix result.


4. main():
- Entry point of the program.
- Prompts the user to enter dimensions for both matrices and checks if multiplication is possible.
- Creates matrices matrix1, matrix2, and result based on user input dimensions.
- Calls inputMatrix() to populate matrix1 and matrix2.
- Calls displayMatrix() to display matrix1 and matrix2.
- Calls multiplyMatrices() to calculate the product and stores it in result.
- Calls displayMatrix() to display the resulting matrix result.


5. Usage:
- Compile the C program using a C compiler (gcc for example).
- Run the compiled executable.
- Enter the number of rows and columns for both matrices when prompted.
- Enter each element of both matrices when prompted.
- After entering all elements, the program will display both matrices and their multiplication     result in a clear format.

This program ensures clarity, modularity (using functions), and adheres to clean coding principles with clear comments and separation of concerns in the C programming language.



